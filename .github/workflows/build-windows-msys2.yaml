name: Windows-MSYS2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        sys: [mingw64, ucrt64]
        std: [17, 20]

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        update: true
        install: >-
          base-devel
          git

    - name: Install build dependencies
      run: |
        if [ "${{ matrix.sys }}" = "mingw64" ]; then
          pacman -S --noconfirm mingw-w64-x86_64-gcc
          pacman -S --noconfirm mingw-w64-x86_64-cmake
          pacman -S --noconfirm mingw-w64-x86_64-ninja
        elif [ "${{ matrix.sys }}" = "ucrt64" ]; then
          pacman -S --noconfirm mingw-w64-ucrt-x86_64-gcc
          pacman -S --noconfirm mingw-w64-ucrt-x86_64-cmake
          pacman -S --noconfirm mingw-w64-ucrt-x86_64-ninja
        fi

    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git /c/vcpkg
        /c/vcpkg/bootstrap-vcpkg.sh
        echo "VCPKG_ROOT=/c/vcpkg" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_CXX_STANDARD=${{ matrix.std }} \
          -DCOMMON_BUILD_TESTS=OFF \
          -DCOMMON_BUILD_EXAMPLES=ON \
          -DCOMMON_BUILD_BENCHMARKS=OFF \
          -DCOMMON_HEADER_ONLY=ON

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      run: |
        # Skip tests if not built
        if [ -f "tests/common_system_tests.exe" ] || [ -f "tests/common_system_tests" ]; then
          ctest -C ${{ matrix.build_type }} --output-on-failure --verbose
        else
          echo "Tests not built, skipping"
        fi

    - name: Install Test
      run: |
        cmake --install build --config ${{ matrix.build_type }} --prefix install_test

    - name: Example Build Test
      if: matrix.build_type == 'Release'
      run: |
        # Test that installed headers work
        cat > test_install.cpp << 'EOF'
        #include <kcenon/common/interfaces/executor_interface.h>
        #include <kcenon/common/patterns/result.h>
        int main() {
            auto result = common::ok(42);
            return common::is_ok(result) ? 0 : 1;
        }
        EOF
        g++ -std=c++${{ matrix.std }} -Iinstall_test/include test_install.cpp -o test_install.exe
        ./test_install.exe

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-msys2-${{ matrix.sys }}-${{ matrix.build_type }}-c++${{ matrix.std }}
        path: build/Testing/