name: Ubuntu-Clang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build clang

      - name: Configure CMake
        run: |
          cmake -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_C_COMPILER=clang \
            -DCOMMON_BUILD_TESTS=ON \
            -DCOMMON_BUILD_EXAMPLES=ON \
            -DCOMMON_BUILD_BENCHMARKS=OFF \
            -DCOMMON_HEADER_ONLY=ON

      - name: Build
        run: cmake --build build --config Debug

      - name: Test (if any)
        working-directory: build
        run: ctest -C Debug --output-on-failure --verbose || true

      - name: Install
        run: cmake --install build --config Debug --prefix install_test

      - name: Example Build Test
        run: |
          # Test that installed headers work
          cat > test_install.cpp << 'EOF'
          #include <kcenon/common/interfaces/executor_interface.h>
          #include <kcenon/common/patterns/result.h>
          int main() {
              auto result = common::ok(42);
              return common::is_ok(result) ? 0 : 1;
          }
          EOF
          clang++ -std=c++17 -Iinstall_test/include test_install.cpp -o test_install
          ./test_install

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ubuntu-clang
          path: build/Testing/
